{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the Function App."
      }
    },
    "runtime": {
      "type": "string",
      "defaultValue": "dotnet",
      "allowedValues": [
        "dotnet",
        "node",
        "java",
        "powershell",
        "python"
      ],
      "metadata": {
        "description": "The runtime for the Function App."
      }
    },
    "isConsumption": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Whether to use Consumption plan for the Function App."
      }
    },
    "isAlwaysOn": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Whether the Function App is always on."
      }
    },
    "hostingPlanName": {
      "type": "string",
      "defaultValue": "[concat(parameters('name'), '-hosting')]",
      "metadata": {
        "description": "The name of the Hosting Plan."
      }
    },
    "hostingPlanSku": {
      "type": "string",
      "defaultValue": "S1",
      "metadata": {
        "description": "The SKU of the Hosting Plan."
      }
    },
    "hostingPlanSkuTier": {
      "type": "string",
      "defaultValue": "Standard",
      "metadata": {
        "description": "The SKU Tier of the Hosting Plan."
      }
    },
    "hostingPlanWorkerSize": {
      "type": "string",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5"
      ],
      "defaultValue": "0",
      "metadata": {
        "description": "The instance size of the Hosting Plan (for App Service: 0 = small, 1 = medium, 2 = large; for Premium: 3 = small, 4 = medium, 5 = large)."
      }
    },
    "hostingPlanWorkerCount": {
      "type": "string",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of workers for the Hosting Plan."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for the resources."
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "metadata": {
        "description": "The tenant identifier of the subscription."
      }
    },
    "timezone": {
      "type": "string",
      "defaultValue": "W. Europe Standard Time",
      "metadata": {
        "description": "The timezone to use for the Function App."
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": null,
      "metadata": {
        "description": "The name of the keyvault the Function App should connect to, leave empty if none."
      }
    },
    "useManagedIdentity": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Whether to use Managed Identity for the Function App."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[concat(parameters('name'), '-storage')]",
      "metadata": {
        "description": "The name of the Storage Account."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS"
      ],
      "metadata": {
        "description": "The Storage Account type"
      }
    },
    "encryptStorage": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Whether to encrypt data in the Storage Account."
      }
    }
  },
  "variables": {
    "templateBaseUrl": "https://raw.githubusercontent.com/Winvision/azure-arm-templates/master/",
    "appInsightsName": "[concat(parameters('name'), '-ai')]"
  },
  "functions": [
    {
      "namespace": "azurefunctions",
      "members": {
        "managedIdentityId": {
          "parameters": [
            {
              "name": "type",
              "type": "string"
            },
            {
              "name": "name",
              "type": "string"
            }
          ],
          "output": {
            "type": "string",
            "value": "[concat(resourceId(parameters('type'), parameters('name')), '/providers/Microsoft.ManagedIdentity/Identities/default')]"
          }
        }
      }
    }
  ],
  "resources": [
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-02-01",
      "name": "[parameters('name')]",
      "kind": "functionapp",
      "location": "[parameters('location')]",
      "identity": {
        "condition": "[parameters('useManagedIdentity')]",
        "type": "SystemAssigned"
      },
      "properties": {
        "name": "[parameters('name')]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "[parameters('runtime')]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "[parameters('timezone')]"
            },
            {
              "condition": "[not(empty(parameters('keyVaultName')))]",
              "name": "KeyVaultName",
              "value": "[parameters('keyVaultName')]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[parameters('name')]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).InstrumentationKey]"
            }
          ],
          "alwaysOn": "[parameters('isAlwaysOn')]"
        },
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
        "clientAffinityEnabled": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "[parameters('storageAccountName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(variables('templateBaseUrl'), 'storage.json')]"
        },
        "parameters": {
          "name": {
            "value": "[parameters('storageAccountName')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          },
          "encryptStorage": {
            "value": "[parameters('encryptStorage')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2015-05-01",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "tags": {
        "[concat('hidden-link:', resourceId('Microsoft.Web/sites', parameters('name')))]": "Resource"
      },
      "properties": {
        "Application_Type": "web",
        "ApplicationId": "[parameters('name')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
      ]
    },
    {
      "condition": "[parameters('isConsumption')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[parameters('hostingPlanName')]",
      "location": "[parameters('location')]",
      "properties": {
        "name": "[parameters('hostingPlanName')]",
        "computeMode": "Dynamic"
      },
      "sku": {
        "Tier": "Dynamic",
        "Name": "Y1"
      }
    },
    {
      "condition": "[not(parameters('isConsumption'))]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[parameters('hostingPlanName')]",
      "location": "[parameters('location')]",
      "properties": {
        "name": "[parameters('hostingPlanName')]",
        "workerSize": "[parameters('hostingPlanWorkerSize')]",
        "workerSizeId": "[parameters('hostingPlanWorkerSize')]",
        "numberOfWorkers": "[parameters('hostingPlanWorkerCount')]"
      },
      "sku": {
        "Tier": "[parameters('hostingPlanSkuTier')]",
        "Name": "[parameters('hostingPlanSku')]"
      }
    },
    {
      "condition": "[not(empty(parameters('keyVaultName')))]",
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "name": "[concat(parameters('keyVaultName'), '/add')]",
      "apiVersion": "2016-10-01",
      "properties": {
        "mode": "Incremental",
        "accessPolicies": [
          {
            "tenantId": "[parameters('tenantId')]",
            "objectId": "[reference(azurefunctions.managedIdentityId('Microsoft.Web/sites', parameters('name'))).principalId]",
            "permissions": {
              "secrets": [
                "get"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
      ]
    }
  ],
  "outputs": {
    "name": {
      "type": "string",
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.KeyVault/sites', parameters('name'))]"
    },
    "msiPrincipalId": {
      "condition": "[parameters('useManagedIdentity')]",
      "type": "string",
      "value": "[reference(azurefunctions.managedIdentityId('Microsoft.Web/sites', parameters('name'))).principalId]",
      "metadata": {
        "comments": "Returns the Principal Identifier of the Managed Identity created for the Function App."
      }
    }
  }
}