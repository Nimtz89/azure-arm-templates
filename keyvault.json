{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "name": {
            "type": "string",
            "metadata": {
                "description": "The name of the Key Vault."
            }
        },
        "secrets": {
            "type": "secureObject",
            "defaultValue": "{}",
            "metadata": {
                "description": "The secrets to add to this keyvault, in the format {\"name\":\"\", \"value\":\"\"}, wrapped in a secure object."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The location of the Key Vault."
            }
        },
        "tenantId": {
            "type": "string",
            "defaultValue": "[subscription().tenantId]",
            "metadata": {
                "description": "The tenant of the Key Vault."
            }
        },
        "admins": {
            "type": "array",
            "defaultValue": null,
            "metadata": {
                "description": "An array of object identifiers that specify which users get Administrator permissions on this Key Vault."
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[parameters('name')]",
            "apiVersion": "2016-10-01",
            "location": "[parameters('location')]",
            "properties": {
                "tenantId": "[parameters('tenantId')]",
                "sku": {
                    "name": "standard",
                    "family": "A"
                },
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(parameters('name'), '/', parameters('secrets').secrets[copyIndex()].name)]",
            "properties": {
                "contentType": "text/plain",
                "value": "[concat(parameters('name'), '/', parameters('secrets').secrets[copyIndex()].value)]"
            },
            "copy": {
                "name": "secretsCopy",
                "count": "[length(parameters('secrets').secrets)]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('name'))]"
            ]
        },
        {
            "condition": "[not(empty(parameters('admins')))]",
            "type": "Microsoft.KeyVault/vaults/accessPolicies",
            "name": "[concat(parameters('name'), '/add')]",
            "apiVersion": "2016-10-01",
            "properties": {
                "mode": "Incremental",
                "accessPolicies": [
                    {
                        "tenantId": "[parameters('tenantId')]",
                        "objectId": "[parameters('admins')[copyIndex()]]",
                        "permissions": {
                            "keys": [
                                "All"
                            ],
                            "secrets": [
                                "All"
                            ],
                            "certificates": [
                                "All"
                            ]
                        }
                    }
                ]
            },
            "copy": {
                "name": "adminsCopy",
                "count": "[length(parameters('admins'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('name'))]"
            ]
        }
    ],
    "outputs": {
        "name": {
            "type": "string",
            "value": "[parameters('name')]"
        },
        "resourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('name'))]"
        }
    }
}